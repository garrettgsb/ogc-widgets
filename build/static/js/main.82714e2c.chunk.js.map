{"version":3,"sources":["selectors/selectors.js","components/SideBar.js","components/ProgressBar.js","contexts.js","components/BottomBar.js","components/Personalize.js","hooks/useGapi.js","hooks/useGoogleSheet.js","PaneManagerWidget.js","App.js","reportWebVitals.js","index.js"],"names":["getCategoriesHavingChosen","selections","appData","Object","entries","filter","map","key","reduce","acc","title","find","item","categories","SideBar","selectedCategory","setSelectedCategory","getPriceByCategory","categoriesHavingChosen","className","values","category","classList","includes","join","count","c","length","categoryPrice","onClick","style","margin","padding","ProgressBar","width","value","max","childBar","UserInputContext","createContext","BottomBar","useContext","budget","updateSelected","pillList","currentCost","price","sumSelectedPrices","push","pill","Personalize","updateTitle","updateBudget","isOffgrid","updateIsOffgrid","useState","tripLength","setTripLength","type","zIndex","onChange","e","target","checked","min","defaultValue","sliderTripValue","initGoogleSheet","onLoad","timeout","Error","window","gapi","load","gapiStart","requestAnimationFrame","client","init","process","then","parseSheet","response","JSON","parse","body","columnNames","row","next","idx","useGoogleSheet","ensureEnvVars","sheetUrl","loading","setLoading","sheetData","setSheetData","useEffect","head","document","getElementsByTagName","script","createElement","src","onreadystatechange","onload","appendChild","request","path","console","error","OneThirdTwoThirdsLayout","props","children","ItemSelectionView","items","setRightSideFocus","rightSideFocus","isSelected","isChosen","ItemDetailView","undefined","addons","addonPrices","Math","getUpperPriceRange","pros","pro","cons","con","blurb","image","alt","CategoryDetails","ItemContentArea","PaneManagerWidget","appCategories","appCategoriesSS","index","self","indexOf","forEach","getCategories","setSelections","setTitle","setBudget","setIsOffgrid","selection","Provider","matchesCategory","Boolean","getSelectedItemsByCategory","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.82714e2c.chunk.js","sourcesContent":["function getCategoriesHavingChosen(selections, appData) {\n  // const itemTitles = [];\n  // still an object\n  // itemTitles.selections.filter((selection) => selection);\n  // const categoryList = [];\n  // console.log(\"selections: \", selections);\n  const itemTitles = Object.entries(selections).filter(([key, val]) => val).map(([key, val]) => key);\n\n  // make into a reduce\n  // itemTitles.forEach((title) => { // title = 'Mystery Machine'\n  //   const matchingItem = appData.find((item) => { // item = { title: 'Mystery Machine', ... }\n  //     return item.title === title;\n  //   })\n  //   ;\n  //   categoryList.concat(matchingItem.categories);\n  // })\n\n  // return itemTitles.reduce((acc, title) => [...acc, ...(appData.find((item) => item.title === title).categories)], [])\n  return itemTitles.reduce((acc, title) => [...acc, appData.find((item) => item.title === title).categories], [])\n  // return categoryList;\n}\n\n// function garrettsCompleteCategories(selections, appCategories, appData) {\n//   const itemTitles = Object.entries(selections).filter(([k, v]) => v).map(([k, v]) => k);\n//   return itemTitles.reduce((acc, title) => [...acc, ...appData.find((item) => item.title === title).categories], []);\n// }\n\nexport default getCategoriesHavingChosen;\n","import getCategoriesHavingChosen from '../selectors/selectors';\n\nconst SideBar = ({ categories, selectedCategory, setSelectedCategory, selections, appData, getPriceByCategory }) => {\n  const categoriesHavingChosen = getCategoriesHavingChosen(selections, appData);\n\n  return (\n    <aside className=\"sidebar cardlike\">\n      {\n        Object.values(categories).map((category) => {\n          const selectedClass = selectedCategory === category ? 'selected' : '';\n          const hasChosenClass = categoriesHavingChosen.includes(category) ? 'having-chosen' : '';\n          const classList = ['menu-item', 'cardlike', selectedClass, hasChosenClass].join(' ');\n          const count = categoriesHavingChosen.filter(c => c === category).length;\n          const categoryPrice = selections.length === 0 ? 0 : getPriceByCategory(category, selections, appData);\n\n          return (\n            <div className={classList} onClick={() => setSelectedCategory(category)} >\n              <h3>{category}</h3>\n              {\n                category === \"Personalize\" ?\n                  <small>Enter Project Info</small>\n                  :\n                  <p style={{ margin: 0, padding: 0 }}>${categoryPrice} <small style={{ margin: 0, padding: 0 }}>({count} selected)</small></p>\n              }\n            </div>\n          );\n        })\n      }\n\n    </aside>\n  )\n}\n\nexport default SideBar;\n","const ProgressBar = ({ value, max }) => {\n  let width = value / max * 100;\n  let childBar = \"child-bar\";\n  if (width > 100) {\n    width = 100;\n    childBar = \"child-bar over-price\";\n  }\n  return (\n    <div className=\"parent-bar\">\n      <div className={childBar} style={{ width: `${width}%` }}>\n\n      </div>\n    </div>\n  )\n}\nexport default ProgressBar;\n\n","import { createContext } from \"react\";\n\nexport const UserInputContext = createContext();\n\n","import ProgressBar from './ProgressBar';\nimport { UserInputContext } from '../contexts';\nimport { useContext } from 'react';\n\nconst BottomBar = ({ selections, appData }) => {\n  const { title, budget, updateSelected } = useContext(UserInputContext);\n  // const pillList = Object.values(selections.filter((selected) => { return selected === true }));\n  const pillList = [];\n  const currentCost = sumSelectedPrices(appData, selections);\n  for (const [key, value] of Object.entries(selections)) {\n    if (value === true) {\n      pillList.push(key);\n    }\n  };\n\n  function sumSelectedPrices(appData, selections) {\n    // notes\n    // let total = 0;\n    // appData.forEach(item => {\n    //   if (selections[item.title]) {\n    //     total += item.price;\n    //   }\n    // });\n    return appData.reduce((acc, item) => selections[item.title] ? acc + item.price : acc, 0);\n  }\n\n  return (\n    <div className=\"bottombar cardlike\">\n      <aside className=\"progress-bar\">\n        <h2>{title}</h2>\n        <h1>Total ${currentCost}</h1>\n        <p className=\"budget-tracker\">${currentCost} / ${budget}</p>\n        <ProgressBar value={currentCost} max={budget} />\n      </aside>\n\n      <div className=\"item-pills\">\n        <h2>Your Build</h2>\n        <div className=\"item-pill-box\">\n          {\n            pillList.map((pill) => {\n              return (\n                <p onClick={() => updateSelected(pill)}>{pill}  X </p>\n              )\n            })\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BottomBar;\n","import { useContext, useState } from \"react\";\nimport { UserInputContext } from \"../contexts\";\n\nconst Personalize = () => {\n  const { title, updateTitle, budget, updateBudget, isOffgrid, updateIsOffgrid } = useContext(UserInputContext);\n  const [tripLength, setTripLength] = useState(\"A couple of nights\");\n\n  function sliderTripValue(value) {\n    switch (value) {\n      case \"1\":\n        setTripLength(\"A couple of nights\");\n        break\n      case \"2\":\n        setTripLength(\"Less than 1 week\");\n        break\n      case \"3\":\n        setTripLength(\"1 to 2 weeks\");\n        break;\n      case \"4\":\n        setTripLength(\"3 to 6 weeks\");\n        break;\n      case \"5\":\n        setTripLength(\"Months long expeditions\");\n        break;\n      default:\n        setTripLength(\"default\");\n        break;\n\n    }\n  }\n\n  return (\n    <div className=\"personalize cardlike\">\n      <h1>Hello,</h1>\n      <h1>{title}</h1>\n      <h4>Project Name</h4>\n      <input type=\"text\" style={{ zIndex: 1 }} onChange={(e) => updateTitle(e.target.value)} />\n      <h4>Current Budget ${budget}</h4>\n      <input type=\"text\" onChange={(e) => updateBudget(e.target.value)} />\n      <h4>Primarily Offgrid?</h4>\n      <label>\n        <input type=\"radio\" checked={isOffgrid === \"yes\"} value=\"yes\" onChange={(e) => updateIsOffgrid(e.target.value)} />\n        Yes\n      </label>\n      <label>\n        <input type=\"radio\" checked={isOffgrid === \"no\"} value=\"no\" onChange={(e) => updateIsOffgrid(e.target.value)} />\n        No\n      </label>\n      <h4>Typical Trip Length?</h4>\n      <div>\n        <input type=\"range\" min=\"1\" max=\"5\" defaultValue=\"1\" onChange={(e) => sliderTripValue(e.target.value)} className=\"trip-slider\" />\n        <p>{tripLength}</p>\n      </div>\n      <p>terrain, full build?, </p>\n    </div>\n  )\n}\n\nexport default Personalize;\n","import { useEffect } from 'react';\n\nexport default function useGapi(onLoad) {\n  useEffect(() => {\n    const head = document.getElementsByTagName('head')[0];\n    const script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = 'https://apis.google.com/js/api.js';\n\n    script.onreadystatechange = initGoogleSheet(onLoad);\n    script.onload = initGoogleSheet(onLoad);\n\n    head.appendChild(script);\n  }, [onLoad]);\n}\n\nfunction initGoogleSheet(onLoad, timeout=100) {\n  if (timeout < 1) throw new Error('Timed out trying to do initGoogleSheet');\n  if (!window.gapi) { return window.requestAnimationFrame(() => initGoogleSheet(onLoad, timeout-1)) }\n  return window.gapi.load('client', () => gapiStart(onLoad));\n}\n\nfunction gapiStart(onLoad) {\n  return window.gapi.client.init({\n    'apiKey': process.env.REACT_APP_SHEET_API_KEY,\n  }).then(onLoad);\n};\n","import { useState, useEffect } from 'react';\nimport useGapi from './useGapi';\n\nfunction useGoogleSheet() {\n  ensureEnvVars();\n  const sheetUrl = process.env.REACT_APP_SHEET_URL\n  const [loading, setLoading] = useState(true);\n  const [sheetData, setSheetData] = useState([])\n\n  useGapi(() => setLoading(false));\n\n  useEffect(() => {\n    if (loading) return () => {};\n    if (!window.gapi) { console.error('Expected GAPI to be loaded, and yet...'); return () => {} }\n    if (!window.gapi.client?.request) { console.error('Expected GAPI to be initialized, and yet...'); return () => {} }\n    window.gapi.client.request({ path: sheetUrl })\n    .then(parseSheet)\n    .then(setSheetData);\n  }, [loading, sheetUrl]);\n\n  return {\n    loading,\n    sheetData,\n  }\n}\n\nfunction ensureEnvVars() {\n  if (!process.env.REACT_APP_SHEET_URL) throw new Error('Must have REACT_APP_SHEET_URL environment variable set. See the README and check your .env file. You\\'ll need to manually restart your sever after adding it.');\n  if (!process.env.REACT_APP_SHEET_API_KEY) throw new Error('Must have REACT_APP_SHEET_API_KEY environment variable set. See the README and check your .env file. You\\'ll need to manually restart your sever after adding it.');\n}\n\nfunction parseSheet(response) {\n  const values = JSON.parse(response.body).values;\n  const [columnNames, ...rows] = values;\n  return rows.map(row =>\n    row.reduce((acc, next, idx) => {\n      try {\n        return ({...acc, [columnNames[idx]]: JSON.parse(next) })\n      } catch {\n        return ({...acc, [columnNames[idx]]: next })\n      }\n    }, {})\n  );\n}\n\nexport default useGoogleSheet;\n","import { useState, useEffect } from 'react';\n// import { /*data as appData ,*/ CATEGORIES as appCategories } from './appData.js';\nimport SideBar from './components/SideBar';\nimport BottomBar from './components/BottomBar';\nimport Personalize from './components/Personalize.js';\nimport { UserInputContext } from './contexts.js';\nimport { useContext } from 'react';\nimport useGoogleSheet from './hooks/useGoogleSheet.js';\n// import aTeam from './assets/ateam.jpeg';\n\n// WORK IN PROGRESS\n\nconst OneThirdTwoThirdsLayout = (props) => {\n  return (\n    <main className='one-third-two-thirds'>\n      {props.children}\n    </main>\n  )\n}\n\nconst ItemSelectionView = ({ items, setRightSideFocus, rightSideFocus, updateSelected, selections }) => {\n\n  return (\n    <aside className='one-third cardlike'>\n      {items.map((item) => {\n        const isSelected = item === rightSideFocus ? \"selected\" : \"\";\n        const isChosen = selections[item.title] ? \"having-chosen\" : \"\";\n        const classList = ['cardlike', 'light', 'menu-item', isSelected, isChosen].join(\" \");\n        return (\n          <div className={classList} onClick={() => setRightSideFocus(item)}>\n            <h3>{item.title}</h3>\n            <p>${item.price}</p>\n            {/* <img src={aTeam} alt=\"The A Team\" className=\"small-image\" /> */}\n            <button onClick={() => updateSelected(item.title)}>{isChosen ? '➖ Remove' : '➕ Add'}</button>\n          </div>\n        )\n      })}\n    </aside>\n  )\n}\n\nconst ItemDetailView = ({ rightSideFocus }) => {\n\n  function getUpperPriceRange(addons, price) {\n    const addonPrices = Object.values(addons);\n    const maxAddonPrice = Math.max(...addonPrices);\n    return maxAddonPrice + price;\n  }\n  // change temp left to two-third grid then add divs with subclasses\n  return (\n    <aside className='cardlike'>\n      {rightSideFocus.title === undefined ?\n        <h1>Click for more info</h1> :\n        <div className=\"item-layout\">\n          <div className=\"temp-left\">\n\n            <h1>{rightSideFocus.title}</h1>\n            {\n              rightSideFocus.addons ?\n                <p>${rightSideFocus.price} - ${getUpperPriceRange(rightSideFocus.addons, rightSideFocus.price)}</p> :\n                <p>${rightSideFocus.price}</p>\n            }\n            <h4>Pros/Cons</h4>\n            <ul className=\"attribute-list\" >\n              {rightSideFocus.pros.map((pro) => {\n                return (\n                  <li className='pro'>{pro}</li>\n                )\n              })}\n              {rightSideFocus.cons.map((con) => {\n                return (\n                  <li className='con'>{con}</li>\n                )\n              })}\n            </ul>\n            <ul className=\"cons\"></ul>\n            <div className=\"item-focus-right\">\n              <h4>Description</h4>\n              <p>{rightSideFocus.blurb}</p>\n            </div>\n          </div>\n          <img src={`/${rightSideFocus.image}`} alt=\"If you're reading this it means our pic is MIA\" className=\"col-image\" />\n        </div>\n      }\n    </aside>\n  )\n}\n\nconst CategoryDetails = ({ items, rightSideFocus, setRightSideFocus, updateSelected, selections }) => {\n  return (\n    <OneThirdTwoThirdsLayout>\n      <ItemSelectionView items={items} setRightSideFocus={setRightSideFocus} rightSideFocus={rightSideFocus} updateSelected={updateSelected} selections={selections} />\n      <ItemDetailView rightSideFocus={rightSideFocus} />\n    </OneThirdTwoThirdsLayout>\n  )\n}\n\nconst ItemContentArea = ({ items, updateSelected, selections }) => {\n  const [rightSideFocus, setRightSideFocus] = useState([]);\n  const { selectedCategory } = useContext(UserInputContext);\n\n  return (\n    <section className=\"content-area\">\n      {\n        selectedCategory === \"Personalize\" ?\n          <Personalize />\n          :\n          <CategoryDetails items={items} rightSideFocus={rightSideFocus} setRightSideFocus={setRightSideFocus} updateSelected={updateSelected} selections={selections} />\n      }\n    </section>\n  )\n}\n\nconst PaneManagerWidget = () => {\n  const { loading, sheetData } = useGoogleSheet();\n  const appData = sheetData;\n  const appCategories = getCategories(appData);\n  const [selectedCategory, setSelectedCategory] = useState(\"Personalize\");\n  const [selections, setSelections] = useState({});\n  const [title, setTitle] = useState(\"Give Your Van a Name\");\n  const [budget, setBudget] = useState(60000);\n  const [isOffgrid, setIsOffgrid] = useState(\"yes\");\n\n  function getCategories(appData) {\n    const appCategoriesSS = appData.map(item => item.categories).filter((value, index, self) => self.indexOf(value) === index);\n    const appCategories = {};\n    appCategoriesSS.forEach(category => appCategories[category] = category);\n    return appCategories;\n  }\n\n  // useEffect(() => {\n  //   if (appCategories === undefined) {\n  //     setTimeout(() =>\n  //       setSelectedCategory(appCategories.Personalize)\n  //       , 3000);\n  //   }\n  // }, [])\n\n  function getPriceByCategory(category, selections, appData) {\n    const selectedItemsInCategory = getSelectedItemsByCategory(category, selections, appData);\n    return selectedItemsInCategory.reduce((acc, item) => {\n      return acc + item.price;\n    }, 0);\n  }\n\n  function getSelectedItemsByCategory(category, selections, appData) {\n    return appData.filter(item => matchesCategory(item, category) && isSelected(item, selections))\n  }\n\n  function matchesCategory(item, category) {\n    // if (item.categories[0] === category) {\n    //   return true\n    // }\n    // return false;\n    return item.categories === category;\n  }\n\n  function isSelected(item, selections) {\n    // if (selections[item.title]) {\n    //   return true;\n    // }\n    // return false;\n    return Boolean(selections[item.title]);\n    // return !!selections[item.title]; // convert undefined to true then to false\n  }\n\n  function updateSelected(selection) {\n    if (selections[selection]) {\n      setSelections({ ...selections, [selection]: !selections[selection] });\n    } else {\n      setSelections({ ...selections, [selection]: true });\n    };\n  }\n\n  function updateTitle(e) {\n    setTitle(e);\n  }\n\n  function updateBudget(e) {\n    setBudget(e);\n  }\n\n  function updateIsOffgrid(e) {\n    setIsOffgrid(e);\n  }\n\n  if (loading || !appData) return <pre>⚡️ Loading ⚡️</pre>\n\n  // const items = appData.filter((item) => item.categories.includes(selectedCategory));\n  const items = appData.filter((item) => item.categories === selectedCategory);\n\n  return (\n    <UserInputContext.Provider value={{ title, selectedCategory, updateTitle, budget, updateBudget, updateSelected, isOffgrid, updateIsOffgrid }}>\n      <main className=\"layout-manager\">\n        <SideBar categories={appCategories} selectedCategory={selectedCategory} setSelectedCategory={setSelectedCategory} selections={selections} appData={appData} getPriceByCategory={getPriceByCategory} />\n        <ItemContentArea items={items} updateSelected={updateSelected} selections={selections} />\n        <BottomBar selections={selections} appData={appData} />\n      </main>\n    </UserInputContext.Provider>\n  )\n}\n\nexport default PaneManagerWidget;\n","import './App-but-pretty.css';\nimport PaneManagerWidget from './PaneManagerWidget';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <PaneManagerWidget />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}